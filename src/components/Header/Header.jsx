import React, { useState, useEffect } from 'react';
import { useNavigate, NavLink } from 'react-router-dom';
import { useTheme } from '../../contexts/ThemeContext';
import '../../styles/Header.css';

const Header = () => {
  const navigate = useNavigate();
  const { theme, toggleTheme } = useTheme();
  const [userName, setUserName] = useState('');

  useEffect(() => {
    // Get user data from localStorage
    const userDataString = localStorage.getItem('user');
    if (userDataString) {
      try {
        const userData = JSON.parse(userDataString);
        setUserName(userData.name || userData.email || '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª');
      } catch (error) {
        console.error('Error parsing user data:', error);
        setUserName('–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª');
      }
    }
  }, []);

  const handleLogout = () => {
    // –ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ –∑–∞ —Å–µ—Å–∏—è—Ç–∞
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    // –ü—Ä–µ–Ω–∞—Å–æ—á–≤–∞–Ω–µ –∫—ä–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞ –∑–∞ –≤—Ö–æ–¥
    navigate('/login');
  };

  return (
    <header className="header">
      <div className="header-content">
        <div className="header-left">
          <h1 className="header-title">–ü–æ–º–æ—â–Ω–∏–∫ –Ω–∞ –¥–æ–º–æ—É–ø—Ä–∞–≤–∏—Ç–µ–ª—è</h1>
        </div>
        <nav className="nav-menu">
          <NavLink to="/buildings" className={({ isActive }) => isActive ? "nav-link active" : "nav-link"}>
            –°–≥—Ä–∞–¥–∏
          </NavLink>
          <NavLink to="/reports" className={({ isActive }) => isActive ? "nav-link active" : "nav-link"}>
            –°–ø—Ä–∞–≤–∫–∏
          </NavLink>
        </nav>
        <div className="header-right">
          <div className="user-info">
            <span className="user-name">–ó–¥—Ä–∞–≤–µ–π, {userName}</span>
          </div>
          <button 
            className={`theme-toggle-button ${theme === 'dark' ? 'dark' : 'light'}`} 
            onClick={toggleTheme}
            title={theme === 'dark' ? '–ü—Ä–µ–≤–∫–ª—é—á–∏ –∫—ä–º —Å–≤–µ—Ç–ª–∞ —Ç–µ–º–∞' : '–ü—Ä–µ–≤–∫–ª—é—á–∏ –∫—ä–º —Ç—ä–º–Ω–∞ —Ç–µ–º–∞'}
          >
            {theme === 'dark' ? '‚òÄÔ∏è' : 'üåô'}
          </button>
          <button className="logout-button" onClick={handleLogout}>
            –ò–∑—Ö–æ–¥
          </button>
        </div>
      </div>
    </header>
  );
};

export default Header;
